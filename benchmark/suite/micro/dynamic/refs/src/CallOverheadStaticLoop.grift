(letrec ([id : (Dyn -> Dyn) (lambda ((x : Dyn)) x)])
  (let ([id : Dyn id]
        [iters : Int (read-int)]
        [acc : (GRef Dyn) (gbox (: 42 Dyn))])
    (letrec ([run-test : (Int Dyn -> Dyn)
              (lambda ([i : Int][acc : Dyn]) acc)])
      (begin
        (timer-start)
        (repeat (i 0 iters) (gbox-set! acc (run-test i (gunbox acc))))
        (timer-stop)
        (timer-report)
	(: (gunbox acc) Int)))))


;; (letrec ([id : Dyn (lambda ((x : Dyn)) x)])
;;   (let ([iters : Dyn (read-int)]
;;         [acc : Dyn (gbox 0)])
;;     (letrec ([run-test : Dyn (lambda (i acc) i)])
;;       (begin
;;         (timer-start)
;;         (repeat (i 0 iters)
;;                 (gbox-set! acc (run-test i (gunbox acc))))
;;         (timer-stop)
;;         (timer-report)
;;         (gunbox acc)))))
