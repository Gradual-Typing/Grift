;;; ARRAY1 -- One of the Kernighan and Van Wyk benchmarks.

(define (create-x [n : Int]) : (Vect Int)
  (let ([result : (Vect Int) (vector n 0)])
    (begin
      (repeat (i 0 n) (_ : Unit ())
	      (vector-set! result i i))
      result)))

(define (create-y [x : (Vect Int)]) : (Vect Int)
  (let ([n : Int (vector-length x)])
    (let ([result : (Vect Int) (vector n 0)])
      (begin
	(repeat (i 0 n) (_ : Unit ())
		(vector-set! result (- (- n i) 1) (vector-ref x (- (- n i) 1))))
	result))))

(define (my-try [n : Int]) : Int
  (vector-length (create-y (create-x n))))

(define (go [m : Int] [n : Int] [r : Int]) : Int
  (if (> m 0)
      (go (- m 1) n (my-try n))
      r))

(define (run-benchmark) : Unit
  (let ([input1 : Int (read-int)])
    (let ([input2 : Int (read-int)])
      (begin (print-int (go input1 input2 0))
             (display-char #\newline)))))

(time (run-benchmark))
