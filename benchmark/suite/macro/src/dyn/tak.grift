;;; TAK -- A vanilla version of the TAKeuchi function.

(define (tak [x : Dyn] [y : Dyn] [z : Dyn]) : Dyn
  (if (>= y x)
      z
      (tak (tak (- x 1) y z)
           (tak (- y 1) z x)
           (tak (- z 1) x y))))

(define (run-benchmark)
  (let ([x : Dyn (read-int)])
    (let ([y : Dyn (read-int)])
      (let ([z : Dyn (read-int)])
        (print-int (tak x y z))))))

(time
 (begin
   (run-benchmark)
   (display-char #\newline)))
